# Copyright (c) 2019-2022, The Khronos Group Inc.
# SPDX-License-Identifier: Apache-2.0

# Main azure-pipelines configuration for the OpenXR-SDK-Sources repo.
trigger:
  branches:
    include:
      - "*"
variables:
  VULKAN_SDK_VERSION: "1.1.114.0"

stages:
  - stage: Check
    jobs:
      - template: shared/check_clang_format.yml

  - stage: Build
    jobs:
      - template: shared/build_jobs.yml
      # Build the loader documentation
      - job: loader_docs
        pool:
          vmImage: "ubuntu-latest"
        container: khronosgroup/docker-images:openxr-base.202110
        steps:
          - script: make loader
            workingDirectory: specification
            displayName: Build loader document
          - publish: $(System.DefaultWorkingDirectory)/specification/generated/out/1.0/loader.html
            artifact: LoaderDoc

  - stage: Generate
    jobs:
      - job: archive
        pool:
          vmImage: "ubuntu-latest"
        container: khronosgroup/docker-images:openxr-base.202110
        steps:
          - script: make loader
            workingDirectory: specification
            displayName: Build loader document
          - script: maintainer-scripts/archive-sdk.sh
            displayName: Generate archived source
          - publish: $(System.DefaultWorkingDirectory)/OpenXR-SDK.tar.gz
            artifact: sdk-tarball

  - stage: GeneratedTest
    jobs:
      # Build the loader on Linux
      - job: linux_build_archive
        displayName: "Linux"
        strategy:
          matrix:
            xlib:
              buildType: RelWithDebInfo
              presentationBackend: xlib
            xcb:
              buildType: RelWithDebInfo
              presentationBackend: xcb
            wayland:
              buildType: RelWithDebInfo
              presentationBackend: wayland
        pool:
          vmImage: "ubuntu-latest"
        container: khronosgroup/docker-images:openxr-sdk.202110
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download archived OpenXR-SDK
            inputs:
              source: current
              artifact: sdk-tarball
              path: "$(Pipeline.Workspace)"
          - script: ls -la
            displayName: List files in directory
          - script: ls -la sdk-tarball* || true
            displayName: List tarball-related files
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: "$(Pipeline.Workspace)/*.tar.gz"
              destinationFolder: $(Pipeline.Workspace)/pregen
              cleanDestinationFolder: true
          - script: ls -la $(Pipeline.Workspace)/pregen
          - template: shared/build_linux.yml
            parameters:
              sourceDir: $(Pipeline.Workspace)/pregen
              buildType: RelWithDebInfo
              cmakeArgs: "-DPRESENTATION_BACKEND=$(PresentationBackend)"

      - job: windows_build_archive
        displayName: "Windows MSVC"
        pool:
          vmImage: "windows-latest"
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download archived OpenXR-SDK
            inputs:
              source: current
              artifact: sdk-tarball
              path: "$(Pipeline.Workspace)"

          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: "$(Pipeline.Workspace)/*.tar.gz"
              destinationFolder: $(Pipeline.Workspace)/pregen
              cleanDestinationFolder: true

          - template: shared/build_msvc.yml
            parameters:
              sourceDir: $(Pipeline.Workspace)/pregen
              buildType: RelWithDebInfo
              generator: "Visual Studio 17 2022"
              useVulkan: "false"
